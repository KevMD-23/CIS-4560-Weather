--Obtain Original Dataset Zip Here (https://www.kaggle.com/datasets/nachiketkamod/weather-dataset-us/data)


--Upload and Extract Weather Dataset

--Upload ZIP to HDFS
hdfs dfs -mkdir -p /user/kduran26/us_weather
hdfs dfs -put Weather_Dataset_US.zip /user/kduran26/us_weather/

--Unzip locally and move CSV to HDFS
unzip Weather_Dataset_US.zip -d ~/us_weather_extracted
hdfs dfs -mkdir -p /user/kduran26/us_weather/csv_raw_weather
hdfs dfs -put ~/us_weather_extracted/Weather\ Data\ \(US\).csv /user/kduran26/us_weather/csv_raw_weather/


--Create Hive Raw Table weather_raw

USE kduran26;

DROP TABLE IF EXISTS weather_raw;

CREATE EXTERNAL TABLE weather_raw (
  id STRING,
  `date` STRING,
  tmax STRING,
  tmin STRING,
  evap STRING,
  prcp STRING,
  latitude STRING,
  longitude STRING,
  elevation STRING
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
LOCATION '/user/kduran26/us_weather/csv_raw_weather/'
TBLPROPERTIES ("skip.header.line.count"="1");


--Create Cleaned Hive Table weather_cleaned

DROP TABLE IF EXISTS weather_cleaned;

CREATE TABLE weather_cleaned AS
SELECT
  id,
  `date`,
  CAST(tmax AS INT) AS tmax_tenths,
  CAST(tmin AS INT) AS tmin_tenths,
  CAST(prcp AS INT) AS prcp_tenths,
  CAST(latitude AS DOUBLE) AS latitude,
  CAST(longitude AS DOUBLE) AS longitude,
  CAST(elevation AS DOUBLE) AS elevation,
  (CAST(tmax AS FLOAT) + CAST(tmin AS FLOAT)) / 20.0 AS avg_temp_celsius,
  (CAST(tmax AS FLOAT) - CAST(tmin AS FLOAT)) / 10.0 AS temp_range_celsius,
  CASE
    WHEN (CAST(tmax AS FLOAT) + CAST(tmin AS FLOAT)) / 20.0 < 5 THEN 'COLD'
    WHEN (CAST(tmax AS FLOAT) + CAST(tmin AS FLOAT)) / 20.0 BETWEEN 5 AND 25 THEN 'MODERATE'
    WHEN (CAST(tmax AS FLOAT) + CAST(tmin AS FLOAT)) / 20.0 > 25 THEN 'HOT'
    ELSE 'UNKNOWN'
  END AS avg_temp_label,
  CASE
    WHEN (CAST(tmax AS FLOAT) - CAST(tmin AS FLOAT)) / 10.0 < 5 THEN 'STABLE'
    WHEN (CAST(tmax AS FLOAT) - CAST(tmin AS FLOAT)) / 10.0 BETWEEN 5 AND 15 THEN 'NORMAL RANGE'
    WHEN (CAST(tmax AS FLOAT) - CAST(tmin AS FLOAT)) / 10.0 > 15 THEN 'EXTREME RANGE'
    ELSE 'UNKNOWN'
  END AS temp_range_volatility
FROM weather_raw
WHERE tmax IS NOT NULL AND tmax != ''
  AND tmin IS NOT NULL AND tmin != ''
  AND prcp IS NOT NULL AND prcp != ''
  AND latitude IS NOT NULL AND latitude != ''
  AND longitude IS NOT NULL AND longitude != ''
  AND elevation IS NOT NULL AND elevation != ''
  AND `date` IS NOT NULL AND `date` != ''
  AND `date` RLIKE '^[0-9]{1,2}/[0-9]{1,2}/20(1[0-9]|20)$';


--Export Cleaned Table to HDFS


INSERT OVERWRITE DIRECTORY '/user/kduran26/us_weather/weather_final_2010_2020'
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
SELECT * FROM weather_cleaned;


--Create Final CSV with Header remove any potential duplicates before

rm -r weather_final_2010_2020
hdfs dfs -get /user/kduran26/us_weather/weather_final_2010_2020 ./weather_final_2010_2020

echo "id,date,tmax_tenths,tmin_tenths,prcp_tenths,latitude,longitude,elevation,avg_temp_celsius,temp_range_celsius,avg_temp_label,temp_range_volatility" > weather_2010_2020.csv
cat weather_final_2010_2020/* >> weather_2010_2020.csv


--Download Final CSV to Local Machine

--From your local terminal (not SSH)
scp kduran26@144.24.46.199:/home/kduran26/weather_2010_2020.csv ~/Downloads/
